{"metadata":{"modules":{"imports":[],"exports":{"exported":[],"specifiers":[]}},"usedHelpers":[]},"ignored":false,"code":"/*\n  DO NOT MODIFY - This file has been generated and will be regenerated\n  Semantic UI v2.1.6\n*/\n/*!\n * # Semantic UI - Rating\n * http://github.com/semantic-org/semantic-ui/\n *\n *\n * Copyright 2015 Contributors\n * Released under the MIT license\n * http://opensource.org/licenses/MIT\n *\n */\n\n;(function ($, window, document, undefined) {\n\n  \"use strict\";\n\n  $.fn.rating = function (parameters) {\n    var $allModules = $(this),\n        moduleSelector = $allModules.selector || '',\n        time = new Date().getTime(),\n        performance = [],\n        query = arguments[0],\n        methodInvoked = typeof query == 'string',\n        queryArguments = [].slice.call(arguments, 1),\n        returnedValue;\n    $allModules.each(function () {\n      var settings = $.isPlainObject(parameters) ? $.extend(true, {}, $.fn.rating.settings, parameters) : $.extend({}, $.fn.rating.settings),\n          namespace = settings.namespace,\n          className = settings.className,\n          metadata = settings.metadata,\n          selector = settings.selector,\n          error = settings.error,\n          eventNamespace = '.' + namespace,\n          moduleNamespace = 'module-' + namespace,\n          element = this,\n          instance = $(this).data(moduleNamespace),\n          $module = $(this),\n          $icon = $module.find(selector.icon),\n          module;\n\n      module = {\n\n        initialize: function () {\n          module.verbose('Initializing rating module', settings);\n\n          if ($icon.length === 0) {\n            module.setup.layout();\n          }\n\n          if (settings.interactive) {\n            module.enable();\n          } else {\n            module.disable();\n          }\n          module.set.rating(module.get.initialRating());\n          module.instantiate();\n        },\n\n        instantiate: function () {\n          module.verbose('Instantiating module', settings);\n          instance = module;\n          $module.data(moduleNamespace, module);\n        },\n\n        destroy: function () {\n          module.verbose('Destroying previous instance', instance);\n          module.remove.events();\n          $module.removeData(moduleNamespace);\n        },\n\n        refresh: function () {\n          $icon = $module.find(selector.icon);\n        },\n\n        setup: {\n          layout: function () {\n            var maxRating = module.get.maxRating(),\n                html = $.fn.rating.settings.templates.icon(maxRating);\n            module.debug('Generating icon html dynamically');\n            $module.html(html);\n            module.refresh();\n          }\n        },\n\n        event: {\n          mouseenter: function () {\n            var $activeIcon = $(this);\n            $activeIcon.nextAll().removeClass(className.selected);\n            $module.addClass(className.selected);\n            $activeIcon.addClass(className.selected).prevAll().addClass(className.selected);\n          },\n          mouseleave: function () {\n            $module.removeClass(className.selected);\n            $icon.removeClass(className.selected);\n          },\n          click: function () {\n            var $activeIcon = $(this),\n                currentRating = module.get.rating(),\n                rating = $icon.index($activeIcon) + 1,\n                canClear = settings.clearable == 'auto' ? $icon.length === 1 : settings.clearable;\n            if (canClear && currentRating == rating) {\n              module.clearRating();\n            } else {\n              module.set.rating(rating);\n            }\n          }\n        },\n\n        clearRating: function () {\n          module.debug('Clearing current rating');\n          module.set.rating(0);\n        },\n\n        bind: {\n          events: function () {\n            module.verbose('Binding events');\n            $module.on('mouseenter' + eventNamespace, selector.icon, module.event.mouseenter).on('mouseleave' + eventNamespace, selector.icon, module.event.mouseleave).on('click' + eventNamespace, selector.icon, module.event.click);\n          }\n        },\n\n        remove: {\n          events: function () {\n            module.verbose('Removing events');\n            $module.off(eventNamespace);\n          }\n        },\n\n        enable: function () {\n          module.debug('Setting rating to interactive mode');\n          module.bind.events();\n          $module.removeClass(className.disabled);\n        },\n\n        disable: function () {\n          module.debug('Setting rating to read-only mode');\n          module.remove.events();\n          $module.addClass(className.disabled);\n        },\n\n        get: {\n          initialRating: function () {\n            if ($module.data(metadata.rating) !== undefined) {\n              $module.removeData(metadata.rating);\n              return $module.data(metadata.rating);\n            }\n            return settings.initialRating;\n          },\n          maxRating: function () {\n            if ($module.data(metadata.maxRating) !== undefined) {\n              $module.removeData(metadata.maxRating);\n              return $module.data(metadata.maxRating);\n            }\n            return settings.maxRating;\n          },\n          rating: function () {\n            var currentRating = $icon.filter('.' + className.active).length;\n            module.verbose('Current rating retrieved', currentRating);\n            return currentRating;\n          }\n        },\n\n        set: {\n          rating: function (rating) {\n            var ratingIndex = rating - 1 >= 0 ? rating - 1 : 0,\n                $activeIcon = $icon.eq(ratingIndex);\n            $module.removeClass(className.selected);\n            $icon.removeClass(className.selected).removeClass(className.active);\n            if (rating > 0) {\n              module.verbose('Setting current rating to', rating);\n              $activeIcon.prevAll().andSelf().addClass(className.active);\n            }\n            settings.onRate.call(element, rating);\n          }\n        },\n\n        setting: function (name, value) {\n          module.debug('Changing setting', name, value);\n          if ($.isPlainObject(name)) {\n            $.extend(true, settings, name);\n          } else if (value !== undefined) {\n            settings[name] = value;\n          } else {\n            return settings[name];\n          }\n        },\n        internal: function (name, value) {\n          if ($.isPlainObject(name)) {\n            $.extend(true, module, name);\n          } else if (value !== undefined) {\n            module[name] = value;\n          } else {\n            return module[name];\n          }\n        },\n        debug: function () {\n          if (settings.debug) {\n            if (settings.performance) {\n              module.performance.log(arguments);\n            } else {\n              module.debug = Function.prototype.bind.call(console.info, console, settings.name + ':');\n              module.debug.apply(console, arguments);\n            }\n          }\n        },\n        verbose: function () {\n          if (settings.verbose && settings.debug) {\n            if (settings.performance) {\n              module.performance.log(arguments);\n            } else {\n              module.verbose = Function.prototype.bind.call(console.info, console, settings.name + ':');\n              module.verbose.apply(console, arguments);\n            }\n          }\n        },\n        error: function () {\n          module.error = Function.prototype.bind.call(console.error, console, settings.name + ':');\n          module.error.apply(console, arguments);\n        },\n        performance: {\n          log: function (message) {\n            var currentTime, executionTime, previousTime;\n            if (settings.performance) {\n              currentTime = new Date().getTime();\n              previousTime = time || currentTime;\n              executionTime = currentTime - previousTime;\n              time = currentTime;\n              performance.push({\n                'Name': message[0],\n                'Arguments': [].slice.call(message, 1) || '',\n                'Element': element,\n                'Execution Time': executionTime\n              });\n            }\n            clearTimeout(module.performance.timer);\n            module.performance.timer = setTimeout(module.performance.display, 500);\n          },\n          display: function () {\n            var title = settings.name + ':',\n                totalTime = 0;\n            time = false;\n            clearTimeout(module.performance.timer);\n            $.each(performance, function (index, data) {\n              totalTime += data['Execution Time'];\n            });\n            title += ' ' + totalTime + 'ms';\n            if (moduleSelector) {\n              title += ' \\'' + moduleSelector + '\\'';\n            }\n            if ($allModules.length > 1) {\n              title += ' ' + '(' + $allModules.length + ')';\n            }\n            if ((console.group !== undefined || console.table !== undefined) && performance.length > 0) {\n              console.groupCollapsed(title);\n              if (console.table) {\n                console.table(performance);\n              } else {\n                $.each(performance, function (index, data) {\n                  console.log(data['Name'] + ': ' + data['Execution Time'] + 'ms');\n                });\n              }\n              console.groupEnd();\n            }\n            performance = [];\n          }\n        },\n        invoke: function (query, passedArguments, context) {\n          var object = instance,\n              maxDepth,\n              found,\n              response;\n          passedArguments = passedArguments || queryArguments;\n          context = element || context;\n          if (typeof query == 'string' && object !== undefined) {\n            query = query.split(/[\\. ]/);\n            maxDepth = query.length - 1;\n            $.each(query, function (depth, value) {\n              var camelCaseValue = depth != maxDepth ? value + query[depth + 1].charAt(0).toUpperCase() + query[depth + 1].slice(1) : query;\n              if ($.isPlainObject(object[camelCaseValue]) && depth != maxDepth) {\n                object = object[camelCaseValue];\n              } else if (object[camelCaseValue] !== undefined) {\n                found = object[camelCaseValue];\n                return false;\n              } else if ($.isPlainObject(object[value]) && depth != maxDepth) {\n                object = object[value];\n              } else if (object[value] !== undefined) {\n                found = object[value];\n                return false;\n              } else {\n                return false;\n              }\n            });\n          }\n          if ($.isFunction(found)) {\n            response = found.apply(context, passedArguments);\n          } else if (found !== undefined) {\n            response = found;\n          }\n          if ($.isArray(returnedValue)) {\n            returnedValue.push(response);\n          } else if (returnedValue !== undefined) {\n            returnedValue = [returnedValue, response];\n          } else if (response !== undefined) {\n            returnedValue = response;\n          }\n          return found;\n        }\n      };\n      if (methodInvoked) {\n        if (instance === undefined) {\n          module.initialize();\n        }\n        module.invoke(query);\n      } else {\n        if (instance !== undefined) {\n          instance.invoke('destroy');\n        }\n        module.initialize();\n      }\n    });\n\n    return returnedValue !== undefined ? returnedValue : this;\n  };\n\n  $.fn.rating.settings = {\n\n    name: 'Rating',\n    namespace: 'rating',\n\n    debug: false,\n    verbose: false,\n    performance: true,\n\n    initialRating: 0,\n    interactive: true,\n    maxRating: 4,\n    clearable: 'auto',\n\n    onRate: function (rating) {},\n\n    error: {\n      method: 'The method you called is not defined',\n      noMaximum: 'No maximum rating specified. Cannot generate HTML automatically'\n    },\n\n    metadata: {\n      rating: 'rating',\n      maxRating: 'maxRating'\n    },\n\n    className: {\n      active: 'active',\n      disabled: 'disabled',\n      selected: 'selected',\n      loading: 'loading'\n    },\n\n    selector: {\n      icon: '.icon'\n    },\n\n    templates: {\n      icon: function (maxRating) {\n        var icon = 1,\n            html = '';\n        while (icon <= maxRating) {\n          html += '<i class=\"icon\"></i>';\n          icon++;\n        }\n        return html;\n      }\n    }\n\n  };\n})(jQuery, window, document);","ast":null,"map":{"version":3,"sources":["/client/definitions/modules/rating.js"],"names":[],"mappings":"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","file":"/client/definitions/modules/rating.js.map","sourcesContent":["/*\n  DO NOT MODIFY - This file has been generated and will be regenerated\n  Semantic UI v2.1.6\n*/\n/*!\n * # Semantic UI - Rating\n * http://github.com/semantic-org/semantic-ui/\n *\n *\n * Copyright 2015 Contributors\n * Released under the MIT license\n * http://opensource.org/licenses/MIT\n *\n */\n\n;(function ($, window, document, undefined) {\n\n\"use strict\";\n\n$.fn.rating = function(parameters) {\n  var\n    $allModules     = $(this),\n    moduleSelector  = $allModules.selector || '',\n\n    time            = new Date().getTime(),\n    performance     = [],\n\n    query           = arguments[0],\n    methodInvoked   = (typeof query == 'string'),\n    queryArguments  = [].slice.call(arguments, 1),\n    returnedValue\n  ;\n  $allModules\n    .each(function() {\n      var\n        settings        = ( $.isPlainObject(parameters) )\n          ? $.extend(true, {}, $.fn.rating.settings, parameters)\n          : $.extend({}, $.fn.rating.settings),\n\n        namespace       = settings.namespace,\n        className       = settings.className,\n        metadata        = settings.metadata,\n        selector        = settings.selector,\n        error           = settings.error,\n\n        eventNamespace  = '.' + namespace,\n        moduleNamespace = 'module-' + namespace,\n\n        element         = this,\n        instance        = $(this).data(moduleNamespace),\n\n        $module         = $(this),\n        $icon           = $module.find(selector.icon),\n\n        module\n      ;\n\n      module = {\n\n        initialize: function() {\n          module.verbose('Initializing rating module', settings);\n\n          if($icon.length === 0) {\n            module.setup.layout();\n          }\n\n          if(settings.interactive) {\n            module.enable();\n          }\n          else {\n            module.disable();\n          }\n          module.set.rating( module.get.initialRating() );\n          module.instantiate();\n        },\n\n        instantiate: function() {\n          module.verbose('Instantiating module', settings);\n          instance = module;\n          $module\n            .data(moduleNamespace, module)\n          ;\n        },\n\n        destroy: function() {\n          module.verbose('Destroying previous instance', instance);\n          module.remove.events();\n          $module\n            .removeData(moduleNamespace)\n          ;\n        },\n\n        refresh: function() {\n          $icon   = $module.find(selector.icon);\n        },\n\n        setup: {\n          layout: function() {\n            var\n              maxRating = module.get.maxRating(),\n              html      = $.fn.rating.settings.templates.icon(maxRating)\n            ;\n            module.debug('Generating icon html dynamically');\n            $module\n              .html(html)\n            ;\n            module.refresh();\n          }\n        },\n\n        event: {\n          mouseenter: function() {\n            var\n              $activeIcon = $(this)\n            ;\n            $activeIcon\n              .nextAll()\n                .removeClass(className.selected)\n            ;\n            $module\n              .addClass(className.selected)\n            ;\n            $activeIcon\n              .addClass(className.selected)\n                .prevAll()\n                .addClass(className.selected)\n            ;\n          },\n          mouseleave: function() {\n            $module\n              .removeClass(className.selected)\n            ;\n            $icon\n              .removeClass(className.selected)\n            ;\n          },\n          click: function() {\n            var\n              $activeIcon   = $(this),\n              currentRating = module.get.rating(),\n              rating        = $icon.index($activeIcon) + 1,\n              canClear      = (settings.clearable == 'auto')\n               ? ($icon.length === 1)\n               : settings.clearable\n            ;\n            if(canClear && currentRating == rating) {\n              module.clearRating();\n            }\n            else {\n              module.set.rating( rating );\n            }\n          }\n        },\n\n        clearRating: function() {\n          module.debug('Clearing current rating');\n          module.set.rating(0);\n        },\n\n        bind: {\n          events: function() {\n            module.verbose('Binding events');\n            $module\n              .on('mouseenter' + eventNamespace, selector.icon, module.event.mouseenter)\n              .on('mouseleave' + eventNamespace, selector.icon, module.event.mouseleave)\n              .on('click'      + eventNamespace, selector.icon, module.event.click)\n            ;\n          }\n        },\n\n        remove: {\n          events: function() {\n            module.verbose('Removing events');\n            $module\n              .off(eventNamespace)\n            ;\n          }\n        },\n\n        enable: function() {\n          module.debug('Setting rating to interactive mode');\n          module.bind.events();\n          $module\n            .removeClass(className.disabled)\n          ;\n        },\n\n        disable: function() {\n          module.debug('Setting rating to read-only mode');\n          module.remove.events();\n          $module\n            .addClass(className.disabled)\n          ;\n        },\n\n        get: {\n          initialRating: function() {\n            if($module.data(metadata.rating) !== undefined) {\n              $module.removeData(metadata.rating);\n              return $module.data(metadata.rating);\n            }\n            return settings.initialRating;\n          },\n          maxRating: function() {\n            if($module.data(metadata.maxRating) !== undefined) {\n              $module.removeData(metadata.maxRating);\n              return $module.data(metadata.maxRating);\n            }\n            return settings.maxRating;\n          },\n          rating: function() {\n            var\n              currentRating = $icon.filter('.' + className.active).length\n            ;\n            module.verbose('Current rating retrieved', currentRating);\n            return currentRating;\n          }\n        },\n\n        set: {\n          rating: function(rating) {\n            var\n              ratingIndex = (rating - 1 >= 0)\n                ? (rating - 1)\n                : 0,\n              $activeIcon = $icon.eq(ratingIndex)\n            ;\n            $module\n              .removeClass(className.selected)\n            ;\n            $icon\n              .removeClass(className.selected)\n              .removeClass(className.active)\n            ;\n            if(rating > 0) {\n              module.verbose('Setting current rating to', rating);\n              $activeIcon\n                .prevAll()\n                .andSelf()\n                  .addClass(className.active)\n              ;\n            }\n            settings.onRate.call(element, rating);\n          }\n        },\n\n        setting: function(name, value) {\n          module.debug('Changing setting', name, value);\n          if( $.isPlainObject(name) ) {\n            $.extend(true, settings, name);\n          }\n          else if(value !== undefined) {\n            settings[name] = value;\n          }\n          else {\n            return settings[name];\n          }\n        },\n        internal: function(name, value) {\n          if( $.isPlainObject(name) ) {\n            $.extend(true, module, name);\n          }\n          else if(value !== undefined) {\n            module[name] = value;\n          }\n          else {\n            return module[name];\n          }\n        },\n        debug: function() {\n          if(settings.debug) {\n            if(settings.performance) {\n              module.performance.log(arguments);\n            }\n            else {\n              module.debug = Function.prototype.bind.call(console.info, console, settings.name + ':');\n              module.debug.apply(console, arguments);\n            }\n          }\n        },\n        verbose: function() {\n          if(settings.verbose && settings.debug) {\n            if(settings.performance) {\n              module.performance.log(arguments);\n            }\n            else {\n              module.verbose = Function.prototype.bind.call(console.info, console, settings.name + ':');\n              module.verbose.apply(console, arguments);\n            }\n          }\n        },\n        error: function() {\n          module.error = Function.prototype.bind.call(console.error, console, settings.name + ':');\n          module.error.apply(console, arguments);\n        },\n        performance: {\n          log: function(message) {\n            var\n              currentTime,\n              executionTime,\n              previousTime\n            ;\n            if(settings.performance) {\n              currentTime   = new Date().getTime();\n              previousTime  = time || currentTime;\n              executionTime = currentTime - previousTime;\n              time          = currentTime;\n              performance.push({\n                'Name'           : message[0],\n                'Arguments'      : [].slice.call(message, 1) || '',\n                'Element'        : element,\n                'Execution Time' : executionTime\n              });\n            }\n            clearTimeout(module.performance.timer);\n            module.performance.timer = setTimeout(module.performance.display, 500);\n          },\n          display: function() {\n            var\n              title = settings.name + ':',\n              totalTime = 0\n            ;\n            time = false;\n            clearTimeout(module.performance.timer);\n            $.each(performance, function(index, data) {\n              totalTime += data['Execution Time'];\n            });\n            title += ' ' + totalTime + 'ms';\n            if(moduleSelector) {\n              title += ' \\'' + moduleSelector + '\\'';\n            }\n            if($allModules.length > 1) {\n              title += ' ' + '(' + $allModules.length + ')';\n            }\n            if( (console.group !== undefined || console.table !== undefined) && performance.length > 0) {\n              console.groupCollapsed(title);\n              if(console.table) {\n                console.table(performance);\n              }\n              else {\n                $.each(performance, function(index, data) {\n                  console.log(data['Name'] + ': ' + data['Execution Time']+'ms');\n                });\n              }\n              console.groupEnd();\n            }\n            performance = [];\n          }\n        },\n        invoke: function(query, passedArguments, context) {\n          var\n            object = instance,\n            maxDepth,\n            found,\n            response\n          ;\n          passedArguments = passedArguments || queryArguments;\n          context         = element         || context;\n          if(typeof query == 'string' && object !== undefined) {\n            query    = query.split(/[\\. ]/);\n            maxDepth = query.length - 1;\n            $.each(query, function(depth, value) {\n              var camelCaseValue = (depth != maxDepth)\n                ? value + query[depth + 1].charAt(0).toUpperCase() + query[depth + 1].slice(1)\n                : query\n              ;\n              if( $.isPlainObject( object[camelCaseValue] ) && (depth != maxDepth) ) {\n                object = object[camelCaseValue];\n              }\n              else if( object[camelCaseValue] !== undefined ) {\n                found = object[camelCaseValue];\n                return false;\n              }\n              else if( $.isPlainObject( object[value] ) && (depth != maxDepth) ) {\n                object = object[value];\n              }\n              else if( object[value] !== undefined ) {\n                found = object[value];\n                return false;\n              }\n              else {\n                return false;\n              }\n            });\n          }\n          if ( $.isFunction( found ) ) {\n            response = found.apply(context, passedArguments);\n          }\n          else if(found !== undefined) {\n            response = found;\n          }\n          if($.isArray(returnedValue)) {\n            returnedValue.push(response);\n          }\n          else if(returnedValue !== undefined) {\n            returnedValue = [returnedValue, response];\n          }\n          else if(response !== undefined) {\n            returnedValue = response;\n          }\n          return found;\n        }\n      };\n      if(methodInvoked) {\n        if(instance === undefined) {\n          module.initialize();\n        }\n        module.invoke(query);\n      }\n      else {\n        if(instance !== undefined) {\n          instance.invoke('destroy');\n        }\n        module.initialize();\n      }\n    })\n  ;\n\n  return (returnedValue !== undefined)\n    ? returnedValue\n    : this\n  ;\n};\n\n$.fn.rating.settings = {\n\n  name          : 'Rating',\n  namespace     : 'rating',\n\n  debug         : false,\n  verbose       : false,\n  performance   : true,\n\n  initialRating : 0,\n  interactive   : true,\n  maxRating     : 4,\n  clearable     : 'auto',\n\n  onRate        : function(rating){},\n\n  error         : {\n    method    : 'The method you called is not defined',\n    noMaximum : 'No maximum rating specified. Cannot generate HTML automatically'\n  },\n\n\n  metadata: {\n    rating    : 'rating',\n    maxRating : 'maxRating'\n  },\n\n  className : {\n    active   : 'active',\n    disabled : 'disabled',\n    selected : 'selected',\n    loading  : 'loading'\n  },\n\n  selector  : {\n    icon : '.icon'\n  },\n\n  templates: {\n    icon: function(maxRating) {\n      var\n        icon = 1,\n        html = ''\n      ;\n      while(icon <= maxRating) {\n        html += '<i class=\"icon\"></i>';\n        icon++;\n      }\n      return html;\n    }\n  }\n\n};\n\n})( jQuery, window, document );\n"]},"hash":"5312d7aca4c0a6651bf0fae91262d66c9263bfb2"}
